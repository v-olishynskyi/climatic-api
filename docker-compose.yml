version: '3.9'

services:
  api:
    build:
      context: .
      dockerfile: Dockerfile_dev
    container_name: climatic_api_dev
    ports:
      - '3000:3000'
    volumes:
      - .:/var/www/application
    env_file:
      - .env
    depends_on:
      - postgres
      - redis
      - rabbitmq

  redis:
    image: redis:7
    container_name: climatic_redis_dev
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data

  postgres:
    image: postgres:15
    container_name: climatic_db_dev
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    ports:
      - '5432:5432'
    volumes:
      - pg_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: climatic_rabbitmq_dev
    ports:
      - '5672:5672' # AMQP
      - '15672:15672' # Web UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq

  subscription_confirmation_worker:
    container_name: subscription_confirmation_worker_dev
    build:
      context: .
      dockerfile: Dockerfile_worker
    command: ['node', 'dist/rabbitmq.subscription-confirmation.main.js']
    depends_on:
      - rabbitmq
    env_file:
      - .env

  weather_daily_worker:
    container_name: weather_daily_worker_dev
    build:
      context: .
      dockerfile: Dockerfile_worker
    command: ['node', 'dist/rabbitmq.weather-daily.main.js']
    depends_on:
      - rabbitmq
    env_file:
      - .env

  weather_hourly_worker:
    container_name: weather_hourly_worker_dev
    build:
      context: .
      dockerfile: Dockerfile_worker
    command: ['node', 'dist/rabbitmq.weather-hourly.main.js']
    depends_on:
      - rabbitmq
    env_file:
      - .env

volumes:
  pg_data:
  redis_data:
  rabbitmq_data:
